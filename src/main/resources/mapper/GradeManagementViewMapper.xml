<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.liu.dao.GradeManagementDao">
    <!--学生端-->
    <resultMap id="getCourseGradeMap" type="com.liu.views.GradeManagementView">
        <!--select_course表信息    id是查询结果的唯一标识-->
        <id column="semesterid" javaType="Integer" jdbcType="INTEGER" property="semesterId"></id>
        <result column="cno" javaType="Integer" jdbcType="INTEGER" property="cno"></result>
        <result column="sno" javaType="Integer" jdbcType="INTEGER" property="sno"></result>
        <result column="grade" javaType="String" jdbcType="VARCHAR" property="detail"></result>
        <result column="detail" javaType="String" jdbcType="VARCHAR" property="detail"></result>

        <!--course 表-->
        <result column="cname" javaType="String" jdbcType="VARCHAR" property="cname"></result>
        <result column="college" javaType="String" jdbcType="VARCHAR" property="college"></result>

        <!--semester 表-->
        <result column="start" javaType="String" jdbcType="VARCHAR" property="start"></result>
        <result column="end" javaType="String" jdbcType="VARCHAR" property="end"></result>
        <result column="semester" javaType="String" jdbcType="VARCHAR" property="semester"></result>

        <!--planning 表-->
        <result column="credit" javaType="Integer" jdbcType="INTEGER" property="credit"></result>

    </resultMap>

    <select id="getCourseGrade" parameterType="com.liu.views.GradeManagementView" resultMap="getCourseGradeMap">
        select semester.start,semester.semester,course.cno,course.cname,course.college,
        planning.credit,select_course.totalscore,select_course.detail,scheduling.percent
        from select_course,semester,course,planning,scheduling
        <where>
            select_course.semesterid=semester.semesterid and course.cno = planning.cno
            and course.cno = select_course.cno and select_course.semesterid=semester.semesterid
            and scheduling.cno = select_course.cno and  sno=#{sno} and totalscore is not null
            <if test="start == 'all' ">
                and semester.start in ('2016','2017','2018')
            </if>

            <if test="start != null and start!= 'all'">
                and start = #{start}
            </if>

            <if test="semester != null and semester!='all' ">
                and semester = #{semester}
            </if>

        </where>

    </select>


    <!--教师端  涉及到多表-->
    <resultMap id="teacher_getCourseGradeMap" type="com.liu.views.GradeManagementView">
        <!--select_course表信息    id是查询结果的唯一标识-->
        <id column="semesterid" javaType="Integer" jdbcType="INTEGER" property="semesterId"></id>
        <result column="cno" javaType="Integer" jdbcType="INTEGER" property="cno"></result>
        <result column="sno" javaType="Integer" jdbcType="INTEGER" property="sno"></result>
        <result column="grade" javaType="String" jdbcType="VARCHAR" property="detail"></result>
        <result column="detail" javaType="String" jdbcType="VARCHAR" property="detail"></result>

        <!--course 表-->
        <result column="cname" javaType="String" jdbcType="VARCHAR" property="cname"></result>
        <result column="college" javaType="String" jdbcType="VARCHAR" property="college"></result>

        <!--semester 表-->
        <result column="start" javaType="String" jdbcType="VARCHAR" property="start"></result>
        <result column="end" javaType="String" jdbcType="VARCHAR" property="end"></result>
        <result column="semester" javaType="String" jdbcType="VARCHAR" property="semester"></result>

        <!--planning 表-->
        <result column="credit" javaType="Integer" jdbcType="INTEGER" property="credit"></result>

    </resultMap>

    <select id="getStudentsGrade" parameterType="com.liu.views.GradeManagementView" resultMap="teacher_getCourseGradeMap">
        select semester.semesterid,`start`,`end`,semester.semester,course.cno,course.cname,
        course.college,sno,credit,detail,totalscore,scheduling.percent
        from select_course,semester,course,planning,scheduling
        <where>
            select_course.semesterid=semester.semesterid and course.cno = planning.cno
            and course.cno = select_course.cno and scheduling.cno = select_course.cno
            and scheduling.tno = #{tno}
            <if test="start == null">
                and start in ('2016','2017','2018')
            </if>

            <if test="start != null ">
                and start = #{start}
            </if>

            <if test="semester != -1 and semester != 0">
                and semester = #{semester}
            </if>

            <if test="cno!=-1">
                and course.cno=#{cno}
            </if>

            <if test="sno!=-1">
                and sno=#{sno}
            </if>

        </where>
    </select>

    <update id="setStudentGradeById" parameterType="com.liu.entity.SelectCourse">
        update select_course set detail = #{detail},totalscore = #{totalScore}
        where semesterid=#{semesterId} and sno=#{sno} and cno=#{cno}
    </update>
    <!--type domain-->
    <select id="getCoursePercent" parameterType="com.liu.views.GradeManagementView" resultType="String">
        select percent from scheduling where semesterid=#{semesterId} and cno=#{cno}
    </select>

    <resultMap id="CnoCname" type="com.liu.views.GradeManagementView">
        <id column="cno" javaType="Integer" jdbcType="INTEGER" property="cno"></id>
        <result column="cname" javaType="String" jdbcType="VARCHAR" property="cname"></result>
    </resultMap>

    <select id="getCourseOfTeacher" parameterType="com.liu.views.GradeManagementView" resultType="com.liu.entity.Course">
        select course.cno,course.cname from course,scheduling,semester
        <where>
            course.cno=scheduling.cno and scheduling.semesterid=semester.semesterid
            and start=#{start} and tno=#{tno}
            <if test="semester!=-1">
                and semester=#{semester}
            </if>
        </where>

    </select>

</mapper>