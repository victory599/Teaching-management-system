<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.dao.SchedulingDao">

    <resultMap id="getAllCoursesMap" type="com.liu.vo.SchedulingCourseView">
        <id property="tname" javaType="String" column="tname"  jdbcType="VARCHAR" ></id>
        <id property="address" javaType="String" column="address"  jdbcType="VARCHAR" ></id>
        <id property="course_time" javaType="String" column="course_time"  jdbcType="VARCHAR" ></id>
        <id property="cname" javaType="String" column="cname"  jdbcType="VARCHAR" ></id>
    </resultMap>
    <select id="getAllCourses" resultMap="getAllCoursesMap">
        select course.cname,scheduling.address,scheduling.course_time,teacher.tname from scheduling,semester,schedule_major,major,course,teacher
        where scheduling.semesterid = semester.semesterid
        and
          teacher.tno = scheduling.tno
        and
          course.cno = scheduling.cno
        and
          major.majorid = schedule_major.majorid
        and
          scheduling.semesterid = schedule_major.semesterid
        and
          scheduling.cno = schedule_major.cno
        and
          semester.start = #{year}
        and
          semester.semester = #{semester}
        and
          major.majorname = #{majorName}
        and
          schedule_major.grade = #{grade}

    </select>

    <resultMap id="getCourseMap" type="com.liu.vo.SchedulingView">
        <id property="tno" javaType="Integer" column="tno"  jdbcType="INTEGER" ></id>
        <id property="address" javaType="String" column="address"  jdbcType="VARCHAR" ></id>
        <id property="time" javaType="String" column="course_time"  jdbcType="VARCHAR" ></id>
        <id property="status" javaType="String" column="status"  jdbcType="VARCHAR" ></id>
        <id property="capacity" javaType="Integer" column="capacity"  jdbcType="INTEGER" ></id>
    </resultMap>
    <select id="getCourse" resultMap="getCourseMap">
          select tno,address,course_time,status,capacity from scheduling
          where semesterid=#{semesterId} and cno=#{cno}
    </select>

    <select id="deleteCourse" resultType="Boolean">
        delete from scheduling where semesterid=#{semesterId} and cno=#{cno}
    </select>

    <select id="deleteCourseMajor" resultType="Boolean">
        delete from schedule_major
        where semesterid=#{semesterId} and cno=#{cno} and majorid=#{majorId}
    </select>

    <select id="addCourse" resultType="Boolean">
        insert into scheduling values(#{semesterId},#{cno},#{tno},#{status},#{capacity}, #{address},"20,30,50",#{grade},#{time});
    </select>

    <select id="addCourseMajor" resultType="Boolean">
        insert into schedule_major values(#{semesterId},#{cno},#{majorId},#{grade})
    </select>

    <select id="getCourseMajorCount" resultType="Integer">
        select count(*) from schedule_major where semesterid=#{semesterId} and cno=#{cno}
    </select>

    <select id="checkCourseMajor" resultType="Integer">
        select 1 from schedule_major
        where semesterid=#{semesterId} and cno=#{cno} and majorid=#{majorId} and grade=#{grade}
    </select>

    <!-- 老师时间、学生时间、教室使用时间的冲突检测 -->
    <select id="getTeacherTaskTime" resultType="String">
        select s.course_time from scheduling s
        where s.semesterid=#{semesterId} and s.tno=#{tno}
    </select>

    <select id="getStudentTaskTime" resultType="String">
        select scheduling.course_time from scheduling
        left join select_course
        on select_course.semesterid=scheduling.semesterid and select_course.cno=scheduling.cno
        where select_course.semesterid=#{semesterId} and select_course.sno=#{sno}
    </select>

    <select id="getRoomTaskTime" resultType="String">
        select scheduling.course_time from scheduling where scheduling.semesterid=#{semesterId} and scheduling.address=#{room}
    </select>

    <resultMap id="cao" type="com.liu.vo.MobileSchedulingView">
        <id property="tno" javaType="Integer" column="tno"  jdbcType="INTEGER" ></id>
        <id property="tname" javaType="String" column="tname"  jdbcType="VARCHAR" ></id>
        <id property="cno" javaType="Integer" column="cno"  jdbcType="INTEGER" ></id>
        <id property="address" javaType="String" column="address"  jdbcType="VARCHAR" ></id>
        <id property="course_time" javaType="String" column="course_time"  jdbcType="VARCHAR" ></id>
        <id property="cname" javaType="String" column="cname"  jdbcType="VARCHAR" ></id>
        <id property="capacity" javaType="Integer" column="capacity"  jdbcType="INTEGER" ></id>
    </resultMap>

    <select id="getCoursesByTnoAndTnameAndAddress" resultMap="cao">
        <bind name="_tname" value="'%'+ tname + '%'"></bind>
        <bind name="_tno" value="'%' + tno + '%'"></bind>
        <bind name="_address" value="'%' + address + '%'"></bind>
        select scheduling.tno,tname,scheduling.cno,cname,address,course_time,capacity from scheduling,teacher,course
        <where>
            scheduling.tno = teacher.tno
            and
            scheduling.cno = course.cno
            <if test="tname != 'null'">
                and
                teacher.tname like #{_tname}
            </if>
            <if test="tno != -1">
                and
                scheduling.tno like #{_tno}
            </if>
            <if test="address != 'null'">
                and
                scheduling.address like #{_address}
            </if>
        </where>

    </select>

    <select id="getCourseInfoByTno" parameterType="int" resultType="com.liu.vo.TeaCourseView">
    select semesterid,teaInfo.cno,capacity,address,course_time,cname from
    (
    (select semesterid,cno,capacity,address,course_time from scheduling
        where tno = #{tno} and status='1') as teaInfo
    inner join
    (select cno,cname from course) as courseInfo
    on teaInfo.cno=courseInfo.cno
    )
    </select>
</mapper>